# server.py
from flask import Flask, request
import requests
import config
import state

app = Flask(__name__)

@app.route('/notify', methods=['POST'])
def notify():
    data = request.get_json()
    if not data:
        return "Invalid request", 400

    event = data.get('event')
    if not event:
        return "No event specified", 400

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –æ—Ç ESP32
    if event == 'open':
        message = 'üîì –ó–∞–º–æ–∫ –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º!'
        state.set_locked(False)
    elif event == 'close':
        message = 'üîí –ó–∞–º–æ–∫ –∑–∞–∫—Ä—ã—Ç!'
        state.set_locked(True)
    elif event == 'motion':
        message = '‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥–≤–∏–∂–µ–Ω–∏–µ —Ä—è–¥–æ–º —Å –∑–∞–º–∫–æ–º!'
    else:
        message = f'‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: {event}'

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/sendMessage"
    params = {
        'chat_id': config.ADMIN_CHAT_ID,
        'text': message
    }
    try:
        requests.get(url, params=params)
    except Exception as e:
        print("Failed to send Telegram message:", e)

    return 'OK', 200

if __name__ == '__main__':
    app.run(host=config.FLASK_HOST, port=config.FLASK_PORT)
